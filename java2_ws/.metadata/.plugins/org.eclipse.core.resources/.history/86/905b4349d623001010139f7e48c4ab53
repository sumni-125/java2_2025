package day3Prac.comparator;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.function.Consumer;

public class 에이콘학생출력하기 {

	public static void main(String[] args) {

		ArrayList<Acorn> list = new ArrayList<>();
		list.add(new Acorn("test01", "1234"));
		list.add(new Acorn("test02", "0000"));
		list.add(new Acorn("atest03", "9999"));

		// 정렬하기

		// Comparator 인터페이스를 직접 구현 - 이름 있는 클래스, 익명, 람다식

		// Comparator.conparing 메서드

		Collections.sort(list, new Comparator<Acorn>() {

			@Override
			public int compare(Acorn o1, Acorn o2) {
				// TODO Auto-generated method stub
				return o1.getId().compareTo(o2.getId());
			}
		});

		list.forEach(item -> System.out.println(item));

		// Collections.sort(list,(o1,o2)->o1.getPw().compareTo(o2.getPw()));
		Collections.sort(list, (o1, o2) -> o1.getPw().compareTo(o2.getPw()));

		list.forEach(item -> System.out.println(item));

		// 제네릭 .static메서드
		// 에이콘학생 아이디로 정렬
		Collections.sort(list, Comparator.<Acorn, String>comparing(item -> item.getId()));
		list.forEach(item -> System.out.println(item));

		// 에이콘 비밀번호로 정렬
		Collections.sort(list, Comparator.<Acorn, String>comparing(item -> item.getPw()));
		list.forEach(item -> System.out.println(item));

		// 에이콘 비밀번호로 정렬 역순
		list.forEach(item -> System.out.println(item));

		Collections.sort(list, Comparator.<Acorn, String>comparing(item -> {return item.getPw();}).reversed());
		System.out.println("비밀번호 역순으로 출력");
		list.forEach(item -> System.out.println(item));
		
		Collections.sort(list, new Comparator<Acorn>() {

			@Override
			public int compare(Acorn o1, Acorn o2) {
				// TODO Auto-generated method stub
				//return o1.getId().compareTo(o2.getId());	//기준(앞에있는 애)가 크면 자리 교환 -> 오름차순
				return  o2.getPw().compareTo(o1.getPw());	//뒤-앞                        -> 내림차순
			}});
		

	}

}
