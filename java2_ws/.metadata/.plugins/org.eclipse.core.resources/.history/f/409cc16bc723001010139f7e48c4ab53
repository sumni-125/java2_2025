package day3Prac.복습;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.function.Consumer;

public class 에이콘학생출력하기 {

	public static void main(String[] args) {
		
		
		ArrayList<Acorn> list = new ArrayList<>();
		list.add(new Acorn("test01","1234"));
		list.add(new Acorn("test02","0000"));
		list.add(new Acorn("test03","9999"));
		
		
		
		//출력하기
		
		list.forEach((item)->{System.out.println(item.getId()+" "+item.getPw());});
		
		list.forEach(new Consumer<Acorn>() {

			@Override
			public void accept(Acorn t) {
				
				System.out.println(t.getId()+" "+t.getPw());
				
			}
		});
		
		list.forEach(new Consumer<Object>() {

			@Override
			public void accept(Object t) {
				Acorn acorn = (Acorn) t;
				System.out.println(acorn.getId()+" "+acorn.getPw());
				
			}});
		
		//이름있는 클래스로 구현
		class AA implements Consumer<Acorn>{

			@Override
			public void accept(Acorn t) {
				System.out.println(t.getId()+" "+t.getPw());
				
			}
			
		}
		
		list.forEach(new AA());
		
		//정렬하기
		//ArrayList => collections 라이브러리
		//Collections.sort(list); => 정렬의 기준이 객체요소에 있어야 함	Comparable 구현해야함
		Collections.sort(list, new Comparator<Acorn>() {

			@Override
			public int compare(Acorn o1, Acorn o2) {
				// TODO Auto-generated method stub
				return o1.getId().compareTo(o2.getId());
			}});
		
		
		//출력하기
		
		list.forEach((item)->{System.out.println(item+"람다식1");});
		
		//매개변수 한개 -> 괄호생랙
		//수행할 코드가 한줄 인경우 중괄호블럭 생략
		list.forEach(item -> System.out.println(item+"람다식2"));
		
		list.sort((o1,o2)->);
		
	}

}
